-- CREATE TABLE PhotosDummy AS (SELECT * FROM tajik.PUBLIC_PHOTOS);
-- CREATE TABLE TagsDummy AS (SELECT * FROM tajik.PUBLIC_TAGS);
-- CREATE TABLE AlbumsDummy AS (SELECT * FROM tajik.PUBLIC_ALBUMS);
-- INSERT INTO UsersDummy VALUES (20001, 'First', 'Photo_Guy', 1992, 10, 29, 'male');
-- INSERT INTO UsersDummy VALUES (20002, 'Second', 'Photo_Girl', 1993, 4, 5, 'female');
-- INSERT INTO PhotosDummy VALUES ('30000', '10', 'Test_Photo', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'dummy_link');
-- INSERT INTO TagsDummy VALUES ('30000', 20001, CURRENT_TIMESTAMP, 2, 3);
-- INSERT INTO TagsDummy VALUES ('30000', 20002, CURRENT_TIMESTAMP, 2, 3);
-- DELETE FROM TagsDummy WHERE TAG_PHOTO_ID = '30000' AND TAG_SUBJECT_ID = 20002;

-- INSERT INTO UsersDummy VALUES (20004, 'Fourth', 'Photo1_Guy', 1992, 10, 29, 'male');
-- INSERT INTO UsersDummy VALUES (20007, 'Third', 'Photo1_Girl', 1992, 10, 29, 'female');
-- INSERT INTO UsersDummy VALUES (20005, 'Fifth', 'Photo2_Guy', 1992, 10, 29, 'male');
-- INSERT INTO UsersDummy VALUES (20006, 'Sixth', 'Photo2_Girl', 1992, 10, 29, 'female');
-- INSERT INTO PhotosDummy VALUES ('30001', '10', 'Test1_Photo', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'dummy1_link');
-- INSERT INTO PhotosDummy VALUES ('30002', '40', 'Test2_Photo', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'dummy2_link');
-- INSERT INTO PhotosDummy VALUES ('30003', '10', 'Test3_Photo', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'dummy3_link');
-- INSERT INTO TagsDummy VALUES ('30001', 20001, CURRENT_TIMESTAMP, 2, 3);
-- INSERT INTO TagsDummy VALUES ('30001', 20002, CURRENT_TIMESTAMP, 2, 3);
-- INSERT INTO TagsDummy VALUES ('30002', 20007, CURRENT_TIMESTAMP, 2, 3);
-- INSERT INTO TagsDummy VALUES ('30002', 20004, CURRENT_TIMESTAMP, 2, 3);
-- INSERT INTO TagsDummy VALUES ('30003', 20005, CURRENT_TIMESTAMP, 2, 3);
-- INSERT INTO TagsDummy VALUES ('30003', 20006, CURRENT_TIMESTAMP, 2, 3);



-- DELETE FROM PhotosDummy WHERE PHOTO_LINK = 'dummy1_link';
-- DELETE FROM PhotosDummy WHERE PHOTO_LINK = 'dummy2_link';
-- DELETE FROM PhotosDummy WHERE PHOTO_LINK = 'dummy3_link';
-- DELETE FROM TagsDummy WHERE TAG_PHOTO_ID = '30001';
-- DELETE FROM TagsDummy WHERE TAG_PHOTO_ID = '30002';
-- DELETE FROM TagsDummy WHERE TAG_PHOTO_ID = '30003';





-- CREATE OR REPLACE VIEW NOT_FRIENDS_MF_AGE_DIFF AS -- REPLACE 10 BY yearDiff
-- SELECT U1.USER_ID AS U1_ID, U2.USER_ID AS U2_ID FROM UsersDummy U1, UsersDummy U2 
-- WHERE ABS(U1.YEAR_OF_BIRTH - U2.YEAR_OF_BIRTH) <= 2 AND U1.GENDER = 'female' AND U2.GENDER = 'male' AND U2.USER_ID NOT IN ((SELECT F.USER2_ID FROM CheckLoney F WHERE F.USER1_ID = U1.USER_ID) UNION (SELECT F.USER1_ID FROM CheckLoney F WHERE F.USER2_ID = U1.USER_ID)) 
-- AND U1.USER_ID NOT IN ((SELECT F.USER2_ID FROM CheckLoney F WHERE F.USER1_ID = U2.USER_ID) UNION (SELECT F.USER1_ID FROM CheckLoney F WHERE F.USER2_ID = U2.USER_ID));

CREATE OR REPLACE VIEW NOT_FRIENDS_MF_AGE_DIFF AS -- REPLACE 10 BY yearDiff
SELECT U1.USER_ID AS U1_ID, U2.USER_ID AS U2_ID FROM UsersDummy U1, UsersDummy U2 
WHERE ABS(U1.YEAR_OF_BIRTH - U2.YEAR_OF_BIRTH) <= 2 AND U1.GENDER = 'female' AND U2.GENDER = 'male' AND NOT EXISTS (SELECT F.USER1_ID FROM CheckLoney F WHERE F.USER1_ID = U1.USER_ID AND F.USER2_ID = U2.USER_ID);

CREATE OR REPLACE VIEW POTENTIAL_COUPLE AS
SELECT * FROM
(SELECT NF.U1_ID AS PC_ID1, U1.FIRST_NAME AS PC_FN1, U1.LAST_NAME AS PC_LN1, U1.YEAR_OF_BIRTH AS PC_YOB1, NF.U2_ID AS PC_ID2, U2.FIRST_NAME AS PC_FN2, U2.LAST_NAME AS PC_LN2, U2.YEAR_OF_BIRTH AS PC_YOB2, COUNT(*) AS TAG_COUNT FROM NOT_FRIENDS_MF_AGE_DIFF NF INNER JOIN UsersDummy U1 ON (NF.U1_ID = U1.USER_ID) INNER JOIN UsersDummy U2 ON (NF.U2_ID = U2.USER_ID) INNER JOIN TagsDummy T1 ON (T1.TAG_SUBJECT_ID = NF.U1_ID) INNER JOIN TagsDummy T2 ON (T2.TAG_SUBJECT_ID = NF.U2_ID) WHERE T1.TAG_PHOTO_ID = T2.TAG_PHOTO_ID GROUP BY NF.U1_ID, NF.U2_ID, U1.FIRST_NAME, U1.LAST_NAME, U1.YEAR_OF_BIRTH, U2.FIRST_NAME, U2.LAST_NAME, U2.YEAR_OF_BIRTH ORDER BY TAG_COUNT, PC_ID1, PC_ID2)
WHERE rownum <= 2;

CREATE OR REPLACE VIEW COMMON_TAGGED_PHOTOS AS
SELECT P.PHOTO_ID AS P_ID, P.ALBUM_ID AS A_ID, A.ALBUM_NAME AS A_NAME, P.PHOTO_CAPTION AS P_CAP, P.PHOTO_LINK AS P_LINK FROM PhotosDummy P INNER JOIN AlbumsDummy A ON (P.ALBUM_ID = A.ALBUM_ID), NOT_FRIENDS_MF_AGE_DIFF NF INNER JOIN TagsDummy T1 ON (T1.TAG_SUBJECT_ID = NF.U1_ID) INNER JOIN TagsDummy T2 ON (T2.TAG_SUBJECT_ID = NF.U2_ID) WHERE T1.TAG_PHOTO_ID = T2.TAG_PHOTO_ID AND P.PHOTO_ID = T1.TAG_PHOTO_ID AND NF.U1_ID = 20002 AND NF.U2_ID = 20001;

SELECT PC_ID1, PC_ID2 FROM POTENTIAL_COUPLE;
SELECT * FROM COMMON_TAGGED_PHOTOS;
SELECT COUNT(*) FROM COMMON_TAGGED_PHOTOS;

DROP VIEW NOT_FRIENDS_MF_AGE_DIFF;
DROP VIEW POTENTIAL_COUPLE;
DROP VIEW COMMON_TAGGED_PHOTOS;
